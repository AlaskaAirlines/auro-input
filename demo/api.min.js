/**
 * Function used for the lang switch demo
 * @private
 */
const changeLang = () => {
  const englishButton = document.getElementById("enButton");
  const spanishButton = document.getElementById("esButton");

  englishButton.addEventListener("click", () => {
    document.documentElement.setAttribute("lang", "en");
  });

  spanishButton.addEventListener("click", () => {
    document.documentElement.setAttribute("lang", "es");
  });
};

function customError() {
  const elem = document.querySelector('#setCustomErrorExample');
  // set custom error
  document.querySelector('#setCustomErrorBtn').addEventListener('click', () => {
    elem.error = "Custom Error Message";
  });

  // remove custom error
  document.querySelector('#setCustomErrorClearBtn').addEventListener('click', () => {
    elem.removeAttribute('error');
  });
}

function setReadonlyValue() {
  const elem = document.querySelector('#readonlyExample');

  // set value of auro-input element
  document.querySelector('#setReadonlyValueBtn').addEventListener('click', () => {
      elem.value = "Auro Alaska";
  });

  document.querySelector('#resetReadonlyValueBtn').addEventListener('click', () => {
    elem.value = undefined;
});
}

function swapInputValues() {
  const btn = document.querySelector('#swapExampleBtn');
  const inputOne = document.querySelector('#swapExampleLeft');
  const inputTwo = document.querySelector('#swapExampleRight');

  btn.addEventListener('click', () => {
    const valueOne = inputOne.value;
    const valueTwo = inputTwo.value;

    inputOne.value = valueTwo;
    inputTwo.value = valueOne;
  });
}

function programmaticallySetValue() {
  const elem = document.querySelector('#setProgrammaticValueExample');
  
  // set value of auro-input element
  document.querySelector('#setValidValueBtn').addEventListener('click', () => {
      elem.value = "Alaska Airlines is the best";
  });

  // reset the value of auro-input element
  document.querySelector('#resetValueBtn').addEventListener('click', () => {
      elem.value = '';
  });
}

function initExamples(initCount) {
  initCount = initCount || 0;

  try {
    changeLang();
    customError();
    setReadonlyValue();
    swapInputValues();
    programmaticallySetValue();
  } catch (error) {
    if (initCount <= 20) {
      // setTimeout handles issue where content is sometimes loaded after the functions get called
      setTimeout(() => {
        initExamples(initCount + 1);
      }, 100);
    }
  }
}

export { initExamples };
